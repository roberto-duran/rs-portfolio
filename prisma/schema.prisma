// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [citext]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                      String       @id @default(cuid())
  name                    String?
  email                   String?      @unique
  emailVerified           DateTime?
  image                   String?
  role                    String?      @db.Citext
  back_ground_information String?      @db.Citext
  phone_number            String?      @db.Citext
  address                 String?      @db.Citext
  isAdmin                 Boolean      @default(false)
  Social                  Social[]
  Experience              Experience[]
  createdAt               DateTime     @default(now())
  updatedAt               DateTime     @default(now()) @updatedAt
  accounts                Account[]
  sessions                Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Social {
  id        String   @id @default(cuid())
  user_id   String?
  title     String   @db.Citext
  url       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  User      User?    @relation(fields: [user_id], references: [id])
}

model Experience {
  id                  String                @id @default(cuid())
  user_id             String?
  job_title           String                @db.Citext
  company_logo        String                @db.Citext
  company_image       String                @db.Citext
  company_name        String                @db.Citext
  company_description String                @db.Citext
  date_started        DateTime
  date_ended          DateTime?
  job_description     Json?
  url                 String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  User                User?                 @relation(fields: [user_id], references: [id])
  skills              Skill_to_Experience[]
}

model Skill {
  id                  String                @id @default(cuid())
  title               String                @db.Citext
  progress            Int
  image               String
  color               String                @db.Citext
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now()) @updatedAt
  Skill_to_Project    Skill_to_Project[]
  Skill_to_Experience Skill_to_Experience[]
}

model Skill_to_Project {
  id         String   @id @default(cuid())
  skill_id   String?
  project_id String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  Skill      Skill?   @relation(fields: [skill_id], references: [id])
  Project    Project? @relation(fields: [project_id], references: [id])
}

model Skill_to_Experience {
  id            String      @id @default(cuid())
  skill_id      String?
  experience_id String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  Skill         Skill?      @relation(fields: [skill_id], references: [id])
  Experience    Experience? @relation(fields: [experience_id], references: [id])
}

model Project {
  id          String             @id @default(cuid())
  title       String             @db.Citext
  description String             @db.Citext
  image       String
  url         String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @default(now()) @updatedAt
  skills      Skill_to_Project[]
}

model ContactMail {
  id        String   @id @default(cuid())
  name      String   @db.Citext
  email     String   @db.Citext
  subject   String   @db.Citext
  message   String   @db.Citext
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
